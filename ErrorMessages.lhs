
In this tutorial, we will start looking at the error messages
generated by Parsec and how we can influence to improve them.

TODO:

review the different methods of generating failure in parsec and what
they look like, including choice.

examine how rearranging parsers can change the error messages,
committing to a parsing branch to improve the messages

also possibly look at adding additional parsing to detect common
errors to provide a nicer error messages

maybe talk about the idea of being permissive in the parsing proper
stage, then doing additional syntax-type checks on the ast after


= ways of generating errors in parsec

= how parsec combines errors or drops them into the void

= value expressions in isolation

We can start with the real error code now by considering the
valueexpression parser in isolation.

ideas:
error inside function parameter list
bad identifier
unrecognised operator
unrecognised chars
unmatching parens
keyword errors in case
unterminated string lit
3 dot components
binary op with missing second arg
associativity errors with binary ops?
blacklist errors

= query expressions



= summarizing?

= updated parsing code with improved error message behaviour

